AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS OIDC setup for GitHub Actions - creates identity provider and IAM role for secure authentication'

Parameters:
  GitHubOrg:
    Type: String
    Description: 'GitHub organization name'
    AllowedPattern: '^[a-zA-Z0-9\-_.]+$'
  
  GitHubRepo:
    Type: String
    Description: 'GitHub repository name (optional - leave empty to allow all repos in org)'
    Default: ''
    AllowedPattern: '^[a-zA-Z0-9\-_.]*$'
  
  RoleName:
    Type: String
    Description: 'Name for the IAM role'
    Default: 'github-actions-role'
    AllowedPattern: '^[a-zA-Z0-9\-_.]+$'

Conditions:
  HasSpecificRepo: !Not [!Equals [!Ref GitHubRepo, '']]

Resources:
  # OIDC Identity Provider for GitHub Actions
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCIdentityProvider
    Properties:
      Url: 'https://token.actions.githubusercontent.com'
      ClientIdList:
        - 'sts.amazonaws.com'
      ThumbprintList:
        # GitHub's OIDC thumbprint (as of 2024)
        - '6938fd4d98bab03faadb97b34396831e3780aea1'
        - '1c58a3a8518e8759bf075b76b750d4f2df264fcd'
      Tags:
        - Key: 'Purpose'
          Value: 'GitHub Actions OIDC'
        - Key: 'ManagedBy'
          Value: 'CloudFormation'

  # IAM Role for GitHub Actions
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref RoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              StringLike:
                'token.actions.githubusercontent.com:sub': !If
                  - HasSpecificRepo
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:*'
                  - !Sub 'repo:${GitHubOrg}/*:*'
      ManagedPolicyArns:
        # Basic ECR permissions
        - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser'
      Policies:
        # Additional EKS and deployment permissions
        - PolicyName: 'GitHubActionsEKSPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # EKS cluster access
              - Effect: Allow
                Action:
                  - 'eks:DescribeCluster'
                  - 'eks:ListClusters'
                  - 'eks:DescribeNodegroup'
                  - 'eks:ListNodegroups'
                  - 'eks:DescribeFargateProfile'
                  - 'eks:ListFargateProfiles'
                  - 'eks:DescribeUpdate'
                  - 'eks:ListUpdates'
                Resource: '*'
              
              # STS permissions for role assumption
              - Effect: Allow
                Action:
                  - 'sts:GetCallerIdentity'
                Resource: '*'
              
              # CloudFormation permissions for infrastructure updates
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:ListStacks'
                Resource: '*'
      
      Tags:
        - Key: 'Purpose'
          Value: 'GitHub Actions OIDC Role'
        - Key: 'GitHubOrg'
          Value: !Ref GitHubOrg
        - Key: 'ManagedBy'
          Value: 'CloudFormation'

Outputs:
  OIDCProviderArn:
    Description: 'ARN of the GitHub OIDC Identity Provider'
    Value: !Ref GitHubOIDCProvider
    Export:
      Name: !Sub '${AWS::StackName}-oidc-provider-arn'
  
  GitHubActionsRoleArn:
    Description: 'ARN of the GitHub Actions IAM Role'
    Value: !GetAtt GitHubActionsRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-github-actions-role-arn'
  
  RoleToAssumeValue:
    Description: 'Value to use for AWS_OIDC_ROLE secret in GitHub'
    Value: !GetAtt GitHubActionsRole.Arn
  
  SetupInstructions:
    Description: 'Next steps to complete setup'
    Value: !Sub |
      1. Add this ARN as AWS_OIDC_ROLE secret in your GitHub repository: ${GitHubActionsRole.Arn}
      2. Remove AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY secrets (if migrating)
      3. Your GitHub Actions will now use OIDC authentication automatically