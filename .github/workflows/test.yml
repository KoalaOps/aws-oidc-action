name: Test AWS OIDC Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-basic-auth:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test basic AWS authentication
        uses: ./
        with:
          aws_region: us-east-1
          role_to_assume: ${{ secrets.AWS_OIDC_ROLE }}
      
      - name: Verify AWS authentication
        run: |
          aws sts get-caller-identity
          echo "✅ AWS authentication successful"

  test-ecr-login:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    # Only run if ECR registry secret is available
    if: ${{ secrets.ECR_REGISTRY != '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test AWS auth with ECR login
        uses: ./
        with:
          aws_region: us-east-1
          role_to_assume: ${{ secrets.AWS_OIDC_ROLE }}
          enable_ecr_login: true
          ecr_registry: ${{ secrets.ECR_REGISTRY }}
      
      - name: Verify ECR login
        run: |
          docker images
          echo "✅ ECR authentication successful"

  test-ecr-with-ensure:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    # Only run if test repository name is available
    if: ${{ secrets.TEST_ECR_REPO_NAME != '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test AWS auth with ECR ensure and login
        uses: ./
        with:
          aws_region: us-east-1
          role_to_assume: ${{ secrets.AWS_OIDC_ROLE }}
          ensure_ecr_repository: true
          ecr_repository_name: ${{ secrets.TEST_ECR_REPO_NAME }}
          enable_ecr_login: true
          ecr_registry: ${{ secrets.ECR_REGISTRY }}
      
      - name: Verify ECR setup and login
        run: |
          # Verify repository exists
          aws ecr describe-repositories --repository-names ${{ secrets.TEST_ECR_REPO_NAME }} --region us-east-1
          docker images
          echo "✅ ECR ensure and authentication successful"

  test-eks-auth:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    # Only run if EKS cluster secret is available
    if: ${{ secrets.EKS_CLUSTER_NAME != '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test AWS auth with EKS setup
        uses: ./
        with:
          aws_region: us-west-2
          role_to_assume: ${{ secrets.AWS_OIDC_ROLE }}
          enable_eks_auth: true
          eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}
      
      - name: Verify EKS context
        run: |
          kubectl config current-context
          kubectl cluster-info
          echo "✅ EKS authentication successful"

  test-combined:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    # Only run if both ECR and EKS secrets are available
    if: ${{ secrets.ECR_REGISTRY != '' && secrets.EKS_CLUSTER_NAME != '' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test AWS auth with ECR and EKS
        uses: ./
        with:
          aws_region: us-west-2
          role_to_assume: ${{ secrets.AWS_OIDC_ROLE }}
          enable_ecr_login: true
          ecr_registry: ${{ secrets.ECR_REGISTRY }}
          enable_eks_auth: true
          eks_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }}
      
      - name: Verify combined setup
        run: |
          aws sts get-caller-identity
          kubectl config current-context
          docker images
          echo "✅ Combined ECR and EKS authentication successful"

  test-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test input validation - missing ECR registry
        uses: ./
        continue-on-error: true
        id: test-ecr-fail
        with:
          aws_region: us-east-1
          role_to_assume: arn:aws:iam::123456789012:role/test-role
          enable_ecr_login: true
          # Missing ecr_registry should cause failure
      
      - name: Verify ECR validation failed
        if: steps.test-ecr-fail.outcome == 'success'
        run: |
          echo "❌ Test should have failed due to missing ECR registry"
          exit 1
      
      - name: Test input validation - missing EKS cluster
        uses: ./
        continue-on-error: true
        id: test-eks-fail
        with:
          aws_region: us-east-1
          role_to_assume: arn:aws:iam::123456789012:role/test-role
          enable_eks_auth: true
          # Missing eks_cluster_name should cause failure
      
      - name: Verify EKS validation failed
        if: steps.test-eks-fail.outcome == 'success'
        run: |
          echo "❌ Test should have failed due to missing EKS cluster name"
          exit 1
      
      - name: Test input validation - missing ECR repository name
        uses: ./
        continue-on-error: true
        id: test-ecr-repo-fail
        with:
          aws_region: us-east-1
          role_to_assume: arn:aws:iam::123456789012:role/test-role
          ensure_ecr_repository: true
          # Missing ecr_repository_name should cause failure
      
      - name: Verify ECR repository validation failed
        if: steps.test-ecr-repo-fail.outcome == 'success'
        run: |
          echo "❌ Test should have failed due to missing ECR repository name"
          exit 1
      
      - name: Validation tests passed
        run: echo "✅ Input validation working correctly"